{"ast":null,"code":"var _s = $RefreshSig$();\n\n//custom  hook using axios\nimport { useState, useEffect } from 'react';\nimport { axios } from 'Axios';\n\nconst useAxios = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isError, setIsError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  useEffect(() => {\n    // setting up to catch an abort in the query\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    axios.get(url, {\n      cancelToken: source.token,\n      responseType: 'json'\n    }).then(res => {\n      if (res.status !== 200) {\n        throw Error(\"Did not get valid for that resource\");\n      }\n\n      return res.data;\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setIsError(null);\n    }).catch(err => {\n      console.log(err.message);\n\n      if (axios.isCancel.err) {\n        console.log('Request canceled', err.message);\n      } else {\n        setIsError(err.message);\n        setIsPending(false);\n      }\n    });\n    return () => CancelToken.cancel;\n  }, [url]);\n  return {\n    data,\n    isPending,\n    isError\n  };\n};\n\n_s(useAxios, \"pr+kbiNppPdS0DiQ23Q0qJtDDpE=\");\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/kwelch/MERN_BOOT_CAMP/homework/21-Homework/BookMarker/client/src/components/utils/useAxios.js"],"names":["useState","useEffect","axios","useAxios","url","data","setData","isError","setIsError","isPending","setIsPending","CancelToken","source","get","cancelToken","token","responseType","then","res","status","Error","catch","err","console","log","message","isCancel","cancel"],"mappings":";;AAAA;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAU;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,WAAW,GAAGT,KAAK,CAACS,WAA1B;AACA,UAAMC,MAAM,GAAGD,WAAW,CAACC,MAAZ,EAAf;AAEIV,IAAAA,KAAK,CAACW,GAAN,CAAUT,GAAV,EAAe;AAACU,MAAAA,WAAW,EAAEF,MAAM,CAACG,KAArB;AACXC,MAAAA,YAAY,EAAE;AADH,KAAf,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AACrB,cAAMC,KAAK,CAAC,qCAAD,CAAX;AACA;;AACL,aAAOF,GAAG,CAACb,IAAX;AACC,KAPL,EAQKY,IARL,CAQYZ,IAAD,IAAU;AACjBC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACC,KAZL,EAaKa,KAbL,CAaYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;;AACA,UAAIvB,KAAK,CAACwB,QAAN,CAAeJ,GAAnB,EAAwB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAG,CAACG,OAApC;AACD,OAFH,MAEU;AACVjB,QAAAA,UAAU,CAACc,GAAG,CAACG,OAAL,CAAV;AACAf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACC;AACJ,KArBL;AAsBJ,WAAO,MAAMC,WAAW,CAACgB,MAAzB;AACH,GA5BQ,EA4BP,CAACvB,GAAD,CA5BO,CAAT;AA8BA,SAAO;AAACC,IAAAA,IAAD;AAAOI,IAAAA,SAAP;AAAkBF,IAAAA;AAAlB,GAAP;AACH,CAtCD;;GAAMJ,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["//custom  hook using axios\nimport{ useState, useEffect } from 'react';\nimport { axios } from 'Axios';\n\nconst useAxios = (url)  => {\n\n    const [data, setData] = useState(null);\n    const [isError, setIsError] = useState(null)\n    const [isPending, setIsPending] = useState(true);\n\n\n    useEffect(() => {\n        // setting up to catch an abort in the query\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n\n            axios.get(url, {cancelToken: source.token,\n                responseType: 'json'})\n                .then(res => {\n                    if(res.status !== 200){\n                     throw Error(\"Did not get valid for that resource\")\n                    }\n                return res.data;\n                })\n                .then ((data) => {\n                setData(data);\n                setIsPending(false);\n                setIsError(null);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                    if (axios.isCancel.err) {\n                        console.log('Request canceled', err.message);\n                      }  else {    \n                    setIsError(err.message);\n                    setIsPending(false);\n                    }\n                })\n        return () => CancelToken.cancel;\n    },[url]) \n\n    return {data, isPending, isError}\n}\n\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}